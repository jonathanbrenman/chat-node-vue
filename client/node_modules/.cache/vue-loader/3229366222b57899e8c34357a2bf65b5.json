{"remainingRequest":"/Users/jonathan-work/Desktop/chat/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jonathan-work/Desktop/chat/client/src/components/chat/input/Input.html?vue&type=template&id=5de05dfe&","dependencies":[{"path":"/Users/jonathan-work/Desktop/chat/client/src/components/chat/input/Input.html","mtime":1548174531991},{"path":"/Users/jonathan-work/Desktop/chat/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonathan-work/Desktop/chat/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"chat-input\" }, [\n    _vm.username\n      ? _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.message,\n              expression: \"message\"\n            }\n          ],\n          staticClass: \"chatInput\",\n          attrs: {\n            type: \"text\",\n            name: \"chatInput\",\n            value: \"\",\n            placeholder: \"Write your message here!\",\n            autocomplete: \"off\"\n          },\n          domProps: { value: _vm.message },\n          on: {\n            keyup: function($event) {\n              if (\n                !(\"button\" in $event) &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.writeMessage($event)\n            },\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.message = $event.target.value\n            }\n          }\n        })\n      : _vm._e(),\n    !_vm.username\n      ? _c(\"input\", {\n          staticClass: \"chatInput\",\n          attrs: {\n            type: \"text\",\n            name: \"chatInput\",\n            value: \"\",\n            placeholder: \"\",\n            readonly: \"\"\n          }\n        })\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}